@model IEnumerable<Infobase.Models.PASS.Activity>

@{
    Layout = "../Shared/_MasterEN.cshtml";
    ViewBag.currentTabName = "Tool";
}

@{ 
    // Due to the life course not being at the root of the tree, it is necessary to employ some hacks to work as if it were
    // TODO: dynamic language code
    var lifeCourseNames = Model.SelectMany(a => a.IndicatorGroups
                                            .SelectMany(ig => ig.LifeCourses.Select(lc => lc.LifeCourseName.Get(("EN", null))))
                                           ).Distinct();
}

<MiniTex>Hello \superscript{World}</MiniTex>
@foreach (var lifeCourseName in lifeCourseNames)
{

    <h3>@lifeCourseName</h3>
    foreach (var activity in Model)
    {

    <details>
        <summary>@activity.ActivityName.Get(("EN", null))</summary>
        <table class="table table-striped table-hover table-bordered">
            <thead>
                <tr>
                    <th class="width-20" scope="col">Indicator Group</th>
                    <th class="width-20" scope="col">Indicator</th>
                    <th class="width-30" scope="col">Indicator Measure(s)</th>
                    <th class="width-10" scope="col">Latest Data</th>
                    <th class="width-20" scope="col">Source (Year)</th>
                    <th scope="col">Description</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var indicatorGroup in activity.IndicatorGroups)
                {

                    var igFirst = true;
                    // Must only select indicators which are a subset of the desired lifecourse
                    var indicators = indicatorGroup.LifeCourses.Where(lc => lc.LifeCourseName.Get(("EN", null)) == lifeCourseName).SelectMany(lc => lc.Indicators);
                    foreach (var indicator in indicators)
                    {
                        var indicatorFirst = true;
                        foreach (var measure in indicator.Measures)
                        {
                            <tr>
                                @if (igFirst)
                                {
                                    igFirst = false;
                                    <td rowspan="@indicators.Count()"><MiniTex>@indicatorGroup.IndicatorGroupName.Get(("EN", null)) </MiniTex></td>
                                }
                                @if (indicatorFirst)
                                {
                                    indicatorFirst = false;
                                    <td rowspan="@indicator.Measures.Count()"><MiniTex>@indicator.IndicatorName.Get(("EN", null))</MiniTex></td>
                                }
                                <td><MiniTex>@measure.MeasureName.Get(("EN", null))</MiniTex></td>
                                @if (measure.DefaultStrataId == null)
                                {
                                    <td><MiniTex>-</MiniTex></td>
                                }
                                else
                                {
                                    if (measure.MeasurePoint.ValueAverage == null) {
                                        <td>-</td>
                                    } else {
                                        <td><MiniTex>@Formatter.Standard(measure.MeasurePoint.ValueAverage ?? 0, "EN") @measure.MeasureUnit.Get(("EN", "Index"))</MiniTex></td>
                                    }
                                }

                                <td><MiniTex>@measure.MeasureSource.Get(("EN", null))</MiniTex></td>
                                <td><MiniTex></MiniTex></td>
                            </tr>
                        }

                    }
                }
            </tbody>
        </table>
    </details>
                                }

                            }